{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","cn","completed","title","TodoList","todos","map","todosWithUsers","userId","usersFromServer","find","App","useState","setTodos","setTitle","hasTitleError","setHasTitleError","selectedUserId","setSelectedUserId","hasUserError","setHasUserError","action","method","onSubmit","event","preventDefault","trim","allTodos","newTodo","Math","max","oneTodo","prevTodos","htmlFor","type","value","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d41f565.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={cn(\n      'TodoInfo',\n      { 'TodoInfo--completed': todo.completed === true },\n    )}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    <UserInfo user={todo.user} />\n  </article>\n);\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => <TodoInfo key={todo.id} todo={todo} />)}\n  </section>\n);\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction findMaxId(allTodos: Todo[]): number {\n  return Math.max(...allTodos.map(oneTodo => oneTodo.id));\n}\n\nconst todosWithUsers: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer.find(user => user.id === todo.userId) as User,\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosWithUsers);\n\n  const [title, setTitle] = useState<string>('');\n  const [hasTitleError, setHasTitleError] = useState<boolean>(false);\n\n  const [selectedUserId, setSelectedUserId] = useState<number>(0);\n  const [hasUserError, setHasUserError] = useState<boolean>(false);\n\n  const changeTitle = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const changeUser = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n    setSelectedUserId(+event.target.value);\n    setHasUserError(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setSelectedUserId(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>): void => {\n    event.preventDefault();\n\n    setHasTitleError(!title.trim());\n    setHasUserError(!selectedUserId);\n\n    if (!title.trim() || !selectedUserId) {\n      return;\n    }\n\n    const maxId = findMaxId(todos);\n\n    const newTodo = {\n      id: maxId + 1,\n      title,\n      completed: false,\n      userId: selectedUserId,\n      user:\n        usersFromServer.find(user => user.id === selectedUserId) as User,\n    };\n\n    setTodos((prevTodos) => [...prevTodos, newTodo]);\n\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title:&nbsp;</label>\n\n          <input\n            id=\"title\"\n            name=\"title\"\n            type=\"text\"\n            value={title}\n            placeholder=\"Enter a title\"\n            data-cy=\"titleInput\"\n            onChange={changeTitle}\n          />\n\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User:&nbsp;</label>\n\n          <select\n            id=\"userSelect\"\n            data-cy=\"userSelect\"\n            value={selectedUserId}\n            onChange={changeUser}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}